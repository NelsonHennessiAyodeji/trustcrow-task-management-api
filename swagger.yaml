openapi: 3.0.0
info:
  title: Trustcrow Task Manager API
  description: The documentation for the Task Manager Web-App, made with Node.js, Express, and PostgreSQL.
  version: 1.0.0
servers:
  - url: https://trustcrow-task-management-api.onrender.com/api/v1
paths:
  /tasks:
    get:
      summary: Get all tasks
      operationId: getAllTasks
      tags:
        - Tasks
      responses:
        "200":
          description: A successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "500":
          description: The server encountered an unexpected condition that prevented it from fulfilling the request.
  /tasks/createtask:
    post:
      summary: Add a new task
      operationId: addTask
      tags:
        - Tasks
      requestBody:
        description: Ceates a new task
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTask"
      responses:
        "201":
          description: Task was accepted and created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Either the input parameter or the values given are not correctly defined.
  /tasks/{id}:
    get:
      summary: Get a specific task
      description: Returns a single task.
      operationId: getTask
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Either the id was not provided or was something other than an integer.
        "404":
          description: The task was not found.
  /tasks/updatetask/{id}:
    put:
      summary: Update a task
      description: Update a task by id.
      operationId: updateTask
      tags:
        - Tasks
      parameters:
        - name: id
          description: The id of the task you want to change.
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTask"
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewTask"
        "400":
          description: Either the id was not provided or was something other than an integer.
        "404":
          description: The task was not found.
  /tasks/deletetask/{id}:
    delete:
      summary: Delete a task
      description: Delete a task by id.
      operationId: deleteTask
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Task deleted successfully
        "400":
          description: Either the id was not provided or was something other than an integer.
        "404":
          description: The task was not found.
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
      example:
        id: 1
        title: "Read"
        description: "Begin reading the new book I bought"
    NewTask:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
      example:
        title: "Eat"
        description: "Eat when you get back home"
